"""initial

Revision ID: 0b1e6adca222
Revises: 
Create Date: 2025-07-07 15:11:08.006365

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0b1e6adca222'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Create 'content' schema if it does not exist
    op.execute("CREATE SCHEMA IF NOT EXISTS content;")
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('film_work',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creation_date', sa.Date(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('type', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('genre',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('person',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('genre_film_work',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('genre_id', sa.UUID(), nullable=False),
    sa.Column('film_work_id', sa.UUID(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['film_work_id'], ['content.film_work.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['content.genre.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('person_film_work',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('person_id', sa.UUID(), nullable=False),
    sa.Column('film_work_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['film_work_id'], ['content.film_work.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['content.person.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('person_film_work', schema='content')
    op.drop_table('genre_film_work', schema='content')
    op.drop_table('person', schema='content')
    op.drop_table('genre', schema='content')
    op.drop_table('film_work', schema='content')
    # ### end Alembic commands ###
